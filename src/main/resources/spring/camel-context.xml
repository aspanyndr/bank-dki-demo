<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring       http://camel.apache.org/schema/spring/camel-spring.xsd">
    <bean class="org.mycompany.util.KillRoute" id="killRoute" scope="singleton"/>
    <bean class="org.mycompany.util.GenerateSignature" id="genSign" scope="singleton"/>
    <bean class="org.mycompany.util.GenerateID" id="genID" scope="singleton"/>
    <bean class="org.mycompany.util.ValidateResponse" id="valResponse" scope="singleton"/>
    <bean class="org.mycompany.util.FilterResponse" id="filterResp"/>
    <bean class="org.mycompany.util.GeneratePayload" id="generatePayload"/>
    <bean class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close" id="dataSourceAudit" primary="true">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://${postgre.host}:${postgre.port}/${postgre.db}?useTimezone=true&amp;serverTimezone=UTC"/>
        <property name="username" value="${postgre.user}"/>
        <property name="password" value="${postgre.password}"/>
    </bean>
    <!-- import routeBS.xml-->
    <import resource="routeBS2.xml"/>
    <import resource="routeBS8.xml"/>
    <import resource="routeBS11.xml"/>
    <import resource="routeBS12.xml"/>
    <camelContext id="camel" streamCache="true" xmlns="http://camel.apache.org/schema/spring">
        <!-- reference routeBS depend on routeContext id="routeBS7" on routeBS.xml-->
        <routeContextRef ref="routeBS2_CardBindLimit"/>
        <routeContextRef ref="routeBS8_EligibleCheck"/>
        <routeContextRef ref="routeBS11_RepaymentNotice"/>
        <routeContextRef ref="routeBS12_QueryOrderStatus"/>
        <dataFormats>
            <json allowJmsType="false" allowUnmarshallType="false"
                contentTypeHeader="false"
                enableJaxbAnnotationModule="false" id="jackson"
                library="Jackson" prettyPrint="false"
                useDefaultObjectMapper="true" useList="false"/>
        </dataFormats>
        <restConfiguration bindingMode="off" component="jetty"
            contextPath="/" host="0.0.0.0" port="9090"/>
        <rest id="rest-82871616-cbc5-4dd8-8554-1d8c03e8246f">
            <post bindingMode="json" consumes="application/json"
                id="fbf31b4d-7c94-478d-9614-c8d3815f1f0b"
                produces="application/json"
                type="org.mycompany.dto.RegLimitDTO" uri="/card-bind-limit">
                <route>
                    <to uri="bean-validator:card-bind-limit"/>
                    <setProperty propertyName="partnerReferenceNo">
                        <simple>${body.partnerReferenceNo}</simple>
                    </setProperty>
                    <doTry id="_doTry2">
                        <to uri="direct:bs_2"/>
                        <doCatch id="_doCatch2">
                            <exception>java.io.IOException</exception>
                            <log id="co_log2" message="Error Message : ${exception.message}, Body : ${body}"/>
                            <setHeader
                                headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader2">
                                <constant>500</constant>
                            </setHeader>
                            <convertBodyTo id="_convertBodyTo2x" type="java.lang.String"/>
                            <setBody id="co_setBody2">
                                <simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
                            </setBody>
                        </doCatch>
                    </doTry>
                    <onException>
                        <exception>com.fasterxml.jackson.core.JsonParseException</exception>
                        <exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
                        <exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
                        <exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
                        <exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <transform>
                            <simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
                        </transform>
                        <setHeader headerName="CamelHttpResponseCode">
                            <constant>422</constant>
                        </setHeader>
                    </onException>
                </route>
            </post>
            <post bindingMode="json" consumes="application/json"
                id="81082d99-7c59-4c26-adc6-b31666c96edf"
                produces="application/json"
                type="org.mycompany.pojo.Body" uri="/queryOrderStatus">
                <route>
                    <to uri="bean-validator:queryOrderStatus"/>
                    <setProperty propertyName="appId">
                        <simple>${body.appId}</simple>
                    </setProperty>
                    <doTry id="_doTry123">
                        <to uri="direct:bs_12"/>
                        <doCatch id="_doCatch123">
                            <exception>java.io.IOException</exception>
                            <log id="co_log12" message="Error Message : ${exception.message}, Body : ${body}"/>
                            <setHeader
                                headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader12">
                                <constant>500</constant>
                            </setHeader>
                            <convertBodyTo id="_convertBodyTo12" type="java.lang.String"/>
                            <setBody id="co_setBody12">
                                <simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
                            </setBody>
                        </doCatch>
                    </doTry>
                    <onException>
                        <exception>com.fasterxml.jackson.core.JsonParseException</exception>
                        <exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
                        <exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
                        <exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
                        <exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <transform>
                            <simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
                        </transform>
                        <setHeader headerName="CamelHttpResponseCode">
                            <constant>422</constant>
                        </setHeader>
                    </onException>
                </route>
            </post>
            <post bindingMode="json" consumes="application/json"
                id="8436ea42-6819-402d-ad78-d8b5b2e7e843"
                produces="application/json"
                type="org.mycompany.dto.RepaymentNoticeDTO" uri="/repaymentNotice">
                <route>
                    <to uri="bean-validator:repaymentNotice"/>
                    <setProperty propertyName="appId">
                        <simple>${body.appId}</simple>
                    </setProperty>
                    <doTry id="_doTry11">
                        <to uri="direct:bs_11"/>
                        <doCatch id="_doCatch11">
                            <exception>java.io.IOException</exception>
                            <log id="co_log11" message="Error Message : ${exception.message}, Body : ${body}"/>
                            <setHeader
                                headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader11">
                                <constant>500</constant>
                            </setHeader>
                            <convertBodyTo id="_convertBodyTo11" type="java.lang.String"/>
                            <setBody id="co_setBody11">
                                <simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
                            </setBody>
                        </doCatch>
                    </doTry>
                    <onException>
                        <exception>com.fasterxml.jackson.core.JsonParseException</exception>
                        <exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
                        <exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
                        <exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
                        <exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <transform>
                            <simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
                        </transform>
                        <setHeader headerName="CamelHttpResponseCode">
                            <constant>422</constant>
                        </setHeader>
                    </onException>
                </route>
            </post>
            <post bindingMode="json" consumes="application/json"
                id="39253b1e-e8d2-45b6-8fcf-bc5e2c98ddff"
                produces="application/json"
                type="org.mycompany.pojo.EligibleCheckBody" uri="/eligibleCheck">
                <route>
                    <to uri="bean-validator:eligibleCheck"/>
                    <setProperty propertyName="appId">
                        <simple>${body.appId}</simple>
                    </setProperty>
                    <doTry id="_doTry8">
                        <to uri="direct:bs_8"/>
                        <doCatch id="_doCatch8">
                            <exception>java.io.IOException</exception>
                            <log id="co_log8" message="Error Message : ${exception.message}, Body : ${body}"/>
                            <setHeader
                                headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader8">
                                <constant>500</constant>
                            </setHeader>
                            <convertBodyTo id="_convertBodyTo8" type="java.lang.String"/>
                            <setBody id="co_setBody8">
                                <simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
                            </setBody>
                        </doCatch>
                    </doTry>
                    <onException>
                        <exception>com.fasterxml.jackson.core.JsonParseException</exception>
                        <exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
                        <exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
                        <exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
                        <exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <transform>
                            <simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
                        </transform>
                        <setHeader headerName="CamelHttpResponseCode">
                            <constant>422</constant>
                        </setHeader>
                    </onException>
                </route>
            </post>
        </rest>
        <route id="_gen_sign">
            <from id="_from31" uri="direct:gen_sign"/>
            <process id="_init_strategy_gen_sign" ref="killRoute"/>
            <throttle id="_throttle1" timePeriodMillis="100">
                <constant>1</constant>
                <bean id="_bean1" method="process('input')" ref="genSign"/>
            </throttle>
        </route>
        <route id="_gen_ID">
            <from id="_from32" uri="direct:genID"/>
            <process id="_init_strategy_val_message" ref="killRoute"/>
            <throttle id="_throttle2" timePeriodMillis="100">
                <constant>1</constant>
                <bean id="_bean2" method="process('input')" ref="genID"/>
            </throttle>
        </route>
        <route id="_valResponse">
            <from id="_from33" uri="direct:valResponse"/>
            <process id="_init_strategy_valResponse" ref="killRoute"/>
            <convertBodyTo id="_convertBodyTo3" type="java.lang.String"/>
            <process id="_init_strategy_valResponse" ref="valResponse"/>
            <log id="_log3" message="body valResponse  : ${exchangeProperty.isSuccess}"/>
        </route>
        <route id="_gen_log">
            <from id="_from2" uri="direct:gen_log"/>
            <process id="_init_strategy_gen_log" ref="killRoute"/>
            <!--log id="_log1" message="Timestamp : ${date:now:yyyy-MM-dd HH:mm:ss} , Signature : ${exchangeProperty.signature}"/>-->
            <convertBodyTo id="_convertBodyTo2" type="java.lang.String"/>
            <process id="_process1" ref="filterResp"/>
            <log id="_log2" message="body to be inserted to DB : ${body}"/>
            <doTry id="_doTry1">
                <toD id="_to3" uri="sql:insert into {{postgre.table.audit}} values ('${exchangeProperty.uuid}','${exchangeProperty.respBs}','${exchangeProperty.status}','${date:now:yyyy-MM-dd HH:mm:ss}')"/>
                <doCatch id="_doCatch1">
                    <exception>org.springframework.jdbc.CannotGetJdbcConnectionException</exception>
                    <exception>org.apache.camel.component.sql.SqlComponent</exception>
                    <exception>java.sql.SQLException</exception>
                    <log id="co_log1" message="Error Message : ${exception.message}"/>
                    <setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader1">
                        <constant>500</constant>
                    </setHeader>
                    <convertBodyTo id="_convertBodyTo1" type="java.lang.String"/>
                    <setBody id="co_setBody1">
                        <simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
                    </setBody>
                </doCatch>
            </doTry>
        </route>
    </camelContext>
</beans>
